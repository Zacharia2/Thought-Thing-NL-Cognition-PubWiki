created: 20220921232052775
creator: miao
modified: 20230615115134212
modifier: WhiteFall
tags: 编程语言的特性与概念 $:/tags/Commander/Working
title: Java的特性和概念
type: text/vnd.tiddlywiki

!! I/O
输入输出流，常见文件操作

!! 注解

注解和C#的特性（Attribute）非常像

注解本身不提供作用，注解只能是被看作元数据，它不包含任何业务逻辑。注解更像是一个标签，一个声明，表面被注释的这个地方，将具有某种特定的逻辑。

https://zhuanlan.zhihu.com/p/399089916

注解常见的种类
常见的注解有三大类：JDK的，自定义的，第三方的（比如框架）

注解三板斧
定义、使用、读取

定义：包括名字，能用到哪些地方，有效期，是否可以被继承

使用：定义好之后在允许的地方使用标注即可

光有前两步，没什么用，如最熟悉的@Override注解，为什么能验证重写是否有效，怎么不是验证重载？spring的@Autowired为什么是注入作用，而不是输出一句话？显然，他们在程序中做了实现，使得其注解具有各自的作用，也具有了意义，而赋予灵魂的一步就是读取

读取：让注解发挥作用，给注解注入灵魂。注解后的方法，字段，类接口等等参考元注解。都可以被获取到然后以特定的逻辑运行，换言之，只要你使用了预先定义好逻辑的注解，即使只存在方法而不存在方法与方法之间的逻辑依然可以执行。



!! 反射机制
通过反射机制查看一个英雄都能做什么。