created: 20220822012823414
creator: TidGiUser
modified: 20230615115134197
modifier: WhiteFall
page-cover: 
tags: $:/tags/Commander/Working
title: All in One Python
type: text/vnd.tiddlywiki

数学、自动化，人工智能、深度学习与数据可视化

[img[python-jpg]]

首先，我花了尽可能少的时间来记住 Python 语法。
然后，我将学到的知识立即投入到一个我真正觉得有趣的项目中。
遵循这个过程不仅更有趣，而且可以让你以惊人的速度学习。
这就是有目的的学习！


! 第 1 步：确定学习领域

在开始之前，有必要问问自己为什么要学习 Python 。
大部分情况，python的学习经历会很无聊和单调。为了成功度过这些阶段，需要通过专注于你非常感兴趣的事情来激励自己。
作为一个初学者，尝试记忆语法是花费很多精力的。
然而，当我需要应用 Python 的基础知识来构建一个自动评分论文的网站时，我可以熬夜学习这些语法，并且快速应用。
所以呢，请找到你感兴趣的一两个领域。
这些领域可以是

# 数学与数据可视化
# 自动化
# ''深度学习''、人工智能
# 数据处理与分析

> 我比较对Excel感兴趣。所以收集一下Excel相关的模块和例子玩玩。

! 第 2 步：学习基本语法

不幸的是，这一步不能跳过。但是你可以花最少的时间在这上面，因为我们已经确定了我们的领域。
这里有一些很好的资源可以帮助你学习 Python 基础知识。
https://docs.python.org/zh-cn/3/tutorial/

''对于初学者来说，务必要在语法上花费尽可能少的时间。

你越早开始讲python应用于实际项目，你就会学得越快。以后遇到困难时，你再去查找语法就行了。

理想情况下，python的语法学习也就花费几周时间，但不超过一个月。''


! 第 3 步：学习项目框架

一旦你学会了基本的 Python 语法，就可以开始自己做项目了。在你应用你的知识之前，很难记住你所学的一切。
实际的项目工作将扩展你的能力，帮助你学习Python
最好从结构化项目开始，直到你觉得可以自己制作项目为止。

用Python自动完成无聊的东西

——学习如何使用 Python 自动化日常任务。

一旦你在自己的领域完成了一些结构化项目，你应该能够开始从事自己​​的项目。



! 第 4 步：自行处理 Python 项目

在你完成了一些结构化项目之后，如果你可以开始在你自己的项目上做你觉得有趣的事情，你会更快地学习 Python。
不过，请记住从一个小项目开始。最好开始一个你完成的小项目，
下面是根据python的功能作用，可以完成的一些作业任务

''数据科学/机器学习项目理念''

* 一张按地区可视化选举投票的地图。
* 一种预测你居住地天气的算法。
* 一种预测股市的工具。
* 一种自动总结新闻文章的算法。

[img[自动化的py数据地图-png]]

你可以制作此地图的更具交互性的版本。

''工作自动化项目理念''

* 自动化数据输入的脚本。
* 一种从网络上抓取数据的工具。

我自己的第一个项目是将我的自动论文评分算法从 R 调整为 Python。''它最终看起来并不漂亮，但它给了我一种成就感，并让我开始了培养我的技能的道路。关键是要选择并去做。如果你过于执着于挑选完美的项目，你就有可能永远做不成。''

在构建项目时，你会遇到代码问题和错误——这是不可避免的。不要让它气馁。有许多资源可以帮助你，包括：

* StackOverflow—— 一个社区问答网站，人们在这里讨论编程问题。
* 百度——每个有经验的程序员最常用的工具。在尝试解决错误时非常有用。 
* Python 文档 ——查找 Python 参考资料的好地方。



! 第 5 步：继续从事更艰巨的项目

不断增加项目的难度和范围。如果你对你正在构建的东西完全满意，这意味着是时候尝试更努力的事情了。
继续寻找挑战你的技能并推动你进一步成长的新项目。
往前走

归根结底，Python 一直在不断发展。只有少数人可以说完全学会和理解了 Python，因为他们创造了它。

所以你需要不断学习和从事新项目以磨练你的技能。如果你做对了，你会发现，6 个月前你写的代码是多么糟糕。如果你达到了这一点，那么你就在正确的轨道上。

Python 是一种有趣且有益的语言。我认为，如果找到正确的动机，任何人都可以达到高水平。